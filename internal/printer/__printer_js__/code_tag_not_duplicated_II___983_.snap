
[TestPrinter/code_tag_not_duplicated_II_(#983) - 1]
## Input

```
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
  </head>
  <body>
    <table>
      <thead>
        <tr>
          <th>A</th>
          <th>B</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Code element with HTML entities</td>
          <td><code>&lt;bar&gt;</code></td>
        </tr>
        <tr>
          <td>Code element below with curly braces</td>
          <td><code>{`<bar>`}</code></td>
        </tr>
      </tbody>
    </table>
  </body>
</html>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: [], hydrationDirectives: new Set([]), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

return $$render`
<html lang="en">
  <head>
    <meta charset="UTF-8">
  ${$$renderHead($$result)}</head>
  <body>
    <table>
      <thead>
        <tr>
          <th>A</th>
          <th>B</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Code element with HTML entities</td>
          <td><code>&lt;bar&gt;</code></td>
        </tr>
        <tr>
          <td>Code element below with curly braces</td>
          <td><code>${`<bar>`}</code></td>
        </tr>
      </tbody>
    </table>
  </body>
</html>`;
}, undefined, undefined);
export default $$Component;
```
---
