
[TestPrinter/client:only_component_(namespaced_named)_-_with_exact_parsing - 1]
## Input

```
/-/-/-/
import { namedImport } from '../components/ui-2';
/-/-/-/
<html>
  <head>
    <title>Hello world</title>
  </head>
  <body>
    <namedImport.Counter2 client:only />
  </body>
</html>
```

## Output

```js
import {
  Fragment,
  render as $$render,
  createAstro as $$createAstro,
  createComponent as $$createComponent,
  renderComponent as $$renderComponent,
  renderHead as $$renderHead,
  maybeRenderHead as $$maybeRenderHead,
  unescapeHTML as $$unescapeHTML,
  renderSlot as $$renderSlot,
  mergeSlots as $$mergeSlots,
  addAttribute as $$addAttribute,
  spreadAttributes as $$spreadAttributes,
  defineStyleVars as $$defineStyleVars,
  defineScriptVars as $$defineScriptVars,
  renderTransition as $$renderTransition,
  createTransitionScope as $$createTransitionScope,
  renderScript as $$renderScript,
  createMetadata as $$createMetadata
} from "http://localhost:3000/";
import { namedImport } from '../components/ui-2';

export const $$metadata = $$createMetadata(import.meta.url, { modules: [], hydratedComponents: [], clientOnlyComponents: ['../components/ui-2'], hydrationDirectives: new Set(['only']), hoisted: [] });

const $$Component = $$createComponent(($$result, $$props, $$slots) => {

return $$render`<html>
  <head>
    <title>Hello world</title>
  ${$$renderHead($$result)}</head>
  <body>
    ${$$renderComponent($$result,'namedImport.Counter2',null,{"client:only":true,"client:component-hydration":"only","client:component-path":($$metadata.resolvePath("../components/ui-2")),"client:component-export":"namedImport.Counter2"})}
  </body>
</html>`;
}, undefined, undefined);
export default $$Component;
```
---
